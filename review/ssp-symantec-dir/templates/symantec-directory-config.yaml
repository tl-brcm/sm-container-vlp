{{- if not .Values.dsaConfig.existingConfigMapName }}
# Template knowledge and server files used by Admin Pod initContainers
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "fullname" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
      app.kubernetes.io/name: {{ template "name" . }}
      app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" | quote }}
      app.kubernetes.io/component: id-store
      app.kubernetes.io/part-of: {{ template "name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
data:
  # When the config map is mounted as a volume, these will be created as files.
  # Need to add a helper template to convert dsaConfig.basedn to dsaConfig.prefix,
  # e.g.: from "dc=democorp,dc=us" to "<dc us><dc democorp>"
  {{ template "fullname" . }}-knowledge.dxc: |-
    # Create the knowledge file for the DSA
    set dsa "{{ template "fullname" . }}" =
    {
      prefix              = {{ .Values.dsaConfig.prefix }}
      dsa-name            = {{ .Values.dsaConfig.prefix }}<cn {{ template "fullname" . }}>
      dsa-password        = "secret"
      address             = tcp "{{ .Values.hostname }}" port 10389, ipv4 "{{ .Values.hostname }}" port 10389
      disp-psap           = DISP
      snmp-port           = 10389
      console-port        = 10390
      remote-console-port = 10395
      auth-levels         = anonymous, clear-password
      dsa-flags           = no-service-while-recovering, multi-write
      trust-flags         = allow-check-password, trust-conveyed-originator, trust-dsa-triggered-operations
    };


  {{ template "fullname" . }}.dxi: |-
    # schema
    source "../schema/x500.dxc";
    source "../schema/cosine.dxc";
    source "../schema/umich.dxc";
    source "../schema/inetop.dxc";
    source "../schema/dxserver.dxc";
    # required for memberOf
    source "../schema/nsroaming.dxc";
    source "../schema/sunone.dxc";

    # knowledge
    clear dsas;
    source "../knowledge/{{ template "fullname" . }}.dxc";

    {{ if .Values.routerDSA.enabled }}
    source "../knowledge/{{ template "fullname" . }}-top-router.dxc";
    source "../knowledge/{{ template "fullname" . }}-dxlink-router.dxc";
    {{- end }}

    {{- with .Values.dsaConfig.additionalSettings }}
        {{-  . | nindent 4 }}
    {{- end }}


    {{- if .Values.dsaConfig.tls.enabled }}
    # ssl
    source "../tls/{{ template "fullname" . }}-ssld.dxc";
    {{- end }}

    # logging
    source "../logging/{{ template "fullname" . }}-logging.dxc";

    set ignore-name-bindings = true;
    # size limits
    set max-users = 1000;
    set max-op-size = 4000;
    set multi-write-queue = 20000;

    # time limits
    set max-bind-time = none;
    set bind-idle-time = 3600;
    set max-op-time = 600;
    set credits = 5;
    set max-local-ops = 1000;

    # grid configuration
    set dxgrid-db-location = "data";
    set dxgrid-db-size = {{ .Values.dsaConfig.sizeInMB }};
    set cache-index = all-attributes;
    set lookup-cache = true;
    set multi-write-disp-recovery = true;

    # enable UUID for directory objects
    set add-entryuuid = true;

    set memberof-user-containers = {{ .Values.dsaConfig.memberofUserContainers }};
    set memberof-group-containers = {{ .Values.dsaConfig.memberofGroupContainers }};

  {{ template "fullname" . }}-ssld.dxc: |-
    set ssl = {
        cert-file = "/opt/CA/Directory/dxserver/config/tls/{{ template "fullname" . }}.pem"
        ca-file = "/opt/CA/Directory/dxserver/config/tls/trusted.pem"
    };

  {{ template "fullname" . }}-logging.dxc: |-
    # Daily warning, statistics, diagnostic & summary logs
    {{- if .Values.dsaLogs.cert.enabled }}
    set cert-log = "logs/$s_cert.log";
    {{- else }}
    #set cert-log = "logs/$s_cert.log";
    {{- end }}

    {{- if .Values.dsaLogs.connect.enabled }}
    set connect-log = "logs/$s_connect.log";
    {{- else }}
    #set connect-log = "logs/$s_connect.log";
    {{- end }}

    {{- if .Values.dsaLogs.diag.enabled }}
    set diag-log = "logs/$s_diag.log";
    {{- else }}
    #set diag-log = "logs/$s_diag.log";
    {{- end }}

    {{- if .Values.dsaLogs.query.enabled }}
    set query-log = "logs/$s_query.log";
    set query-log-advanced = {{ .Values.dsaLogs.query.advanced }};
    {{- else }}
    #set query-log = "logs/$s_query.log";
    #set query-log-advanced = all;
    {{- end }}

    {{- if .Values.dsaLogs.stats.enabled }}
    set stats-log = "logs/$s_stats.log";
    {{- if .Values.dsaLogs.stats.extendedTracing }}
    set extended-stats-tracing = true;
    {{- end }}
    {{- else }}
    #set stats-log = "logs/$s_stats.log";
    #set extended-stats-tracing = true;
    {{- end }}

    {{- if .Values.dsaLogs.summary.enabled }}
    set summary-log = "logs/$s_summary.log";
    {{- else }}
    #set summary-log = "logs/$s_summary.log";
    {{- end }}

    {{- if .Values.dsaLogs.time.enabled }}
    set time-log = "logs/$s_time.log";
    set time-log-search-threshold = {{ .Values.dsaLogs.time.searchThreshold }};
    set time-log-update-threshold = {{ .Values.dsaLogs.time.updateThreshold }};
    {{- else }}
    #set time-log = "logs/$s_time.log";
    #set time-log-search-threshold = 100;
    #set time-log-update-threshold = 100;
    {{- end }}

    # DSA trace log - Used for debugging
    # Set trace to error for production systems, dsa level is appropriate for debugging only
    # possible values: alert, cert,connect,diag,dsa,error,ldap,limit,query,stack,stats,summary,time,update,warn,x500 and none
    # See documentation for other trace settings
    {{- if .Values.dsaLogs.trace.enabled }}
    set trace-log = "logs/$s_trace.log";
    set trace = {{ .Values.dsaLogs.trace.level }};
    set rollover-trace-log = true;
    {{- else }}
    #set trace-log = "logs/$s_trace.log";
    #set trace = {{ .Values.dsaLogs.trace.level }};
    #set rollover-trace-log = true;
    {{- end }}

    {{- if .Values.dsaLogs.update.enabled }}
    set update-log = "logs/$s_update.log";
    {{- if .Values.dsaLogs.update.showValues }}
    set  update-log-show-values = true;
    {{- end }}
    {{- else }}
    #set update-log = "logs/$s_update.log";
    #set update-log-show-values = false;
    {{- end }}

    {{- if .Values.dsaLogs.warn.enabled }}
    set warn-log = "logs/$s_warn.log";
    {{- else }}
    #set warn-log = "logs/$s_warn.log";
    {{- end }}

    set rollover-alarm-log = true;

  {{ template "fullname" . }}-base.ldif: |-
    # DO NOT EDIT - SKELETON LDIF

    dn: cn=admin,{{ .Values.dsaConfig.baseDN }}
    objectClass: inetOrgPerson
    objectClass: organizationalPerson
    objectClass: person
    objectClass: top
    cn: admin
    sn: user
    userPassword: ${ADMIN_PASSWORD}

    #





{{ if .Values.routerDSA.enabled }}

  {{ template "fullname" . }}-top-router-knowledge.dxc: |-
    # Create the knowledge file for the top DSA router
    set dsa "{{ template "fullname" . }}-top-router" =
    {
      prefix              = <>
      dsa-name            = <cn {{ template "fullname" . }}-top-router>
      dsa-password        = "secret"
      address             = tcp "{{ .Values.hostname }}" port 11389, ipv4 "{{ .Values.hostname }}" port 11389
      disp-psap           = DISP
      snmp-port           = 11389
      console-port        = 11390
      remote-console-port = 11395
      auth-levels         = anonymous, clear-password
      dsa-flags           = no-service-while-recovering, multi-write
      trust-flags         = trust-conveyed-originator, trust-dsa-triggered-operations
    };
  {{ template "fullname" . }}-dxlink-router-knowledge.dxc: |-
    # Create the knowledge file for the dxlink DSA router
    set dsa "{{ template "fullname" . }}-dxlink-router" =
    {
      prefix              = {{ .Values.dsaConfig.prefix }}<ou {{.Values.routerDSA.dxlinkOU }}>
      dsa-name            = {{ .Values.dsaConfig.prefix }}<ou {{.Values.routerDSA.dxlinkOU }}><cn {{ template "fullname" . }}-dxlink-router>
      dsa-password        = "secret"
      address             = tcp "{{ .Values.hostname }}" port 12389, ipv4 "{{ .Values.hostname }}" port 12389
      disp-psap           = DISP
      snmp-port           = 12389
      console-port        = 12390
      remote-console-port = 12395
      auth-levels         = anonymous, clear-password
      dsa-flags           = no-service-while-recovering, multi-write
      trust-flags         = trust-conveyed-originator, trust-dsa-triggered-operations
    };
  {{ template "fullname" . }}-top-router.dxi: |-
    # schema
    source "../schema/x500.dxc";
    source "../schema/cosine.dxc";
    source "../schema/umich.dxc";
    source "../schema/inetop.dxc";
    source "../schema/dxserver.dxc";
    # required for memberOf
    source "../schema/nsroaming.dxc";
    source "../schema/sunone.dxc";

    # knowledge
    clear dsas;
    source "../knowledge/{{ template "fullname" . }}-top-router.dxc";
    source "../knowledge/{{ template "fullname" . }}-dxlink-router.dxc";
    source "../knowledge/{{ template "fullname" . }}.dxc";

    {{- with .Values.routerDSA.additionalSettings }}
        {{-  . | nindent 4 }}
    {{- end }}

    {{- if .Values.dsaConfig.tls.enabled }}
    # ssl
    source "../tls/sample-app-ssp-symantec-dir-cert.dxc";
    {{- end }}
    set ignore-name-bindings = true;

    # logging
    source "../logging/{{ template "fullname" . }}-top-router-logging.dxc";

    # size limits
    set max-users = 1000;
    set max-op-size = 4000;
    set multi-write-queue = 20000;

    # time limits
    set max-bind-time = none;
    set bind-idle-time = 3600;
    set max-op-time = 600;
    set credits = 5;
    set max-local-ops = 1000;
    set transparent-routing = true;

  {{ template "fullname" . }}-dxlink-router.dxi: |-
    # schema
    source "../schema/x500.dxc";
    source "../schema/cosine.dxc";
    source "../schema/umich.dxc";
    source "../schema/inetop.dxc";
    source "../schema/dxserver.dxc";
    # required for memberOf
    source "../schema/nsroaming.dxc";
    source "../schema/sunone.dxc";

    # knowledge
    clear dsas;
    source "../knowledge/{{ template "fullname" . }}-top-router.dxc";
    source "../knowledge/{{ template "fullname" . }}-dxlink-router.dxc";
    source "../knowledge/{{ template "fullname" . }}.dxc";

    {{- with .Values.routerDSA.additionalSettings }}
        {{-  . | nindent 4 }}
    {{- end }}

    {{- if .Values.dsaConfig.tls.enabled }}
    # ssl
    source "../tls/sample-app-ssp-symantec-dir-cert.dxc";
    {{- end }}
    set ignore-name-bindings = true;

    # logging
    source "../logging/{{ template "fullname" . }}-dxlink-router-logging.dxc";

    # size limits
    set max-users = 1000;
    set max-op-size = 4000;
    set multi-write-queue = 20000;

    # time limits
    set max-bind-time = none;
    set bind-idle-time = 3600;
    set max-op-time = 600;
    set credits = 5;
    set max-local-ops = 1000;
    set transparent-routing = true;


  {{ template "fullname" . }}-top-router-logging.dxc: |-

    # DSA trace log - Used for debugging
    # Set trace to error for production systems, dsa level is appropriate for debugging only
    # possible values: alert, cert,connect,diag,dsa,error,ldap,limit,query,stack,stats,summary,time,update,warn,x500 and none
    # See documentation for other trace settings
    {{- if .Values.routerDSA.logs.topRouter.trace.enabled }}
    set trace-log = "logs/$s_trace.log";
    set trace = {{ .Values.routerDSA.logs.topRouter.trace.level }};
    set rollover-trace-log = true;
    {{- else }}
    #set trace-log = "logs/$s_trace.log";
    #set trace = {{ .Values.routerDSA.logs.topRouter.trace.level }};
    #set rollover-trace-log = true;
    {{- end }}

    # Daily warning, statistics, diagnostic & summary logs

    {{- if .Values.routerDSA.logs.topRouter.warn.enabled }}
    set warn-log = "logs/$s_warn.log";
    {{- else }}
    #set warn-log = "logs/$s_warn.log";
    {{- end }}

    {{- if .Values.routerDSA.logs.topRouter.stats.enabled }}
    set stats-log = "logs/$s_stats.log";
    {{- if .Values.routerDSA.logs.topRouter.stats.extendedTracing }}
    set extended-stats-tracing = true;
    {{- end }}
    {{- else }}
    #set stats-log = "logs/$s_stats.log";
    #set extended-stats-tracing = true;
    {{- end }}

    set diag-log = "logs/$s_diag.log";
    #set summary-log = "logs/$s_summary.log";

    set rollover-alarm-log = true;


  {{ template "fullname" . }}-dxlink-router-logging.dxc: |-

    # DSA trace log - Used for debugging
    # Set trace to error for production systems, dsa level is appropriate for debugging only
    # possible values: alert, cert,connect,diag,dsa,error,ldap,limit,query,stack,stats,summary,time,update,warn,x500 and none
    # See documentation for other trace settings
    {{- if .Values.routerDSA.logs.dxlink.trace.enabled }}
    set trace-log = "logs/$s_trace.log";
    set trace = {{ .Values.routerDSA.logs.dxlink.trace.level }};
    set rollover-trace-log = true;
    {{- else }}
    #set trace-log = "logs/$s_trace.log";
    #set trace = {{ .Values.routerDSA.logs.dxlink.trace.level }};
    #set rollover-trace-log = true;
    {{- end }}

    # Daily warning, statistics, diagnostic & summary logs

    {{- if .Values.routerDSA.logs.dxlink.warn.enabled }}
    set warn-log = "logs/$s_warn.log";
    {{- else }}
    #set warn-log = "logs/$s_warn.log";
    {{- end }}

    {{- if .Values.routerDSA.logs.dxlink.stats.enabled }}
    set stats-log = "logs/$s_stats.log";
    {{- if .Values.routerDSA.logs.dxlink.stats.extendedTracing }}
    set extended-stats-tracing = true;
    {{- end }}
    {{- else }}
    #set stats-log = "logs/$s_stats.log";
    #set extended-stats-tracing = true;
    {{- end }}

    set diag-log = "logs/$s_diag.log";
    #set summary-log = "logs/$s_summary.log";

    set rollover-alarm-log = true;


{{- end }}

{{- end }}
