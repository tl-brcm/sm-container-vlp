global:
                                     #*********************************#
  ###******************************* #      Mandatory Parameters       #*********************************###
                                     #*********************************#

  fullname: casso
  acceptLicenseAgreement: "YES"

  # Docker image repository details #
  registry:
    url: https://siteminder.packages.broadcom.com/
    existingSecrets: []
    credentials:
      username:
      password:

  # The masterKeySeed value is used for encrypting all secrets. Enter a value in Base64 encoded format.
  masterKeySeed: "ZmlyZXdhbGw="

  # FIPS mode of Policy Server can be "COMPAT" or "ONLY".
  fipsMode: "COMPAT"

  # Enter the password of the default Superuser "siteminder".
  superuserPassword: ""
  encryptionKey: ""

  policyStore:
    # Provide IP address/Hostname for policy store along with port number. Syntax: policystorehost:port.
    #Example: policystorehost.domain.com:389
    # To enable failover support of odbc policy stores, enter comma-separated mutliple entries of DSN names.
    #Example: POLICYSTORE_DSN1,POLICYSTORE_DSN2,POLICYSTORE_DSN3, etc
    # To enable failover support of ldap policy stores, enter comma-separated multiple entries of hostnames and port numbers.
    #Example: host1:port1,host2:port2,host3:port3, etc
    # Policy store type is either ldap or odbc
    service: "POLICYSTORE_HOST:PORT"
    userPassword: ""
    type: "odbc"
    odbc:
      # This section is for odbc policy store type. The supported odbc policy store types are "oracle" and "mysql".
      # If odbc type is "mysql", provide valid databasename, DSN, and username.
      # If odbc type is "oracle", provide servicename.
      type: "mysql"
      databaseName: "POLICYSTORE_DATABASENAME"
      DSN: "POLICYSTORE_DSN"
      user: "POLICYSTORE_USER"
      oracle:
        databaseServiceName: "POLICYSTORE_ORACLE_SERVICE"

      # To enable SSL in odbc policy store, set "enabled" to "true".
      ssl:
        enabled: false
        # If SSL is enabled in odbc policy store, set "trustStore" and "trustPassword". "hostNameInCertificate" is optional.
        trustStore: ""
        hostNameInCertificate: ""
        trustPassword: ""
    ldap:
      # This section is for ldap policy store type. The ldap type can be "cadir".
      type: "cadir"
      rootDN: "POLICYSTORE_ROOTDN"
      userDN: "POLICYSTORE_USERDN"
      # To enable SSL in ldap policy store, set "enabled" to "true".
      ssl:
        enabled: false

    # Policy store version
    version: 12.8.07
  ###****************************************************************************************************###

  imagePullPolicy: Always
  dnsPolicy: ClusterFirst
  restartPolicy: Always

  policyServerParams:
    # Health probe settings for Policy Server.
    healthProbe:
      port: 8181
      trustedHost: "healthprobe"
      intervalSeconds: 10
      # If Policy Server health probe connection mode is HTTPS.
      connectMode: "HTTP"
      keyStoreFileName: "psprobekeystore.jks"
      keyStorePassword: ""
    livenessProbe:
      initialDelaySeconds: 180
      timeoutSeconds: 10
      periodSeconds: 10
      failureThreshold: 500
    readinessProbe:
      initialDelaySeconds: 30
      timeoutSeconds: 10
      periodSeconds: 10
      failureThreshold: 500

    # To enable Policy Server trace logging, set "enabled" to "true".
    # Custom smtracedefault.txt can be provided using Config retriever.
    smTrace:
      enabled: false

    # To enable OneView Monitor support, set "enabled" to "true".
    # Administrative Server listens on 44449 port to monitor requests.
    # Enter "guiPort" to access GUI on NodePort, "port" is the service port.
    # serviceToConnect defines the OneView Monitor service name for components to register in the <ovmServiceName>.<namespace>.svc.cluster.local,44449 format.
    ovm: 
      enabled: false
      port: 31449
      guiPort: 30004
      serviceToConnect:  casso-siteminder-ovm-admin.cassoserver.svc.cluster.local,44449

    # To start Policy Server monitoring, set "startPSMon" to "true".
    startPSMon: "true"

    # If autoscaling is enabled, set value for 'agentConnectionMaxLifetime' in minutes.
    # Default value is '0' which means 6 hrs. Minimum value in 15 minutes.
    agentConnectionMaxLifetime: 0
    
    # Service type can be "NodePort" or "LoadBalancer".
    service:
      type: NodePort
      # Some cloud services may support custom Kubernetes annotations for optimizing load-balancing behavior.
      # Ensure that each annotation line in the values field ends with a comma, including the last one defined.
      # Example for AWS -
      # values: {service.beta.kubernetes.io/aws-load-balancer-internal: "true",service.beta.kubernetes.io/aws-load-balancer-access-log-enabled: "true", }
      annotations:
        enabled: false
        values: {} 

    # Set enableSymantecIGAIntegration to YES to enable the integration with Symantec IGA.
    enableSymantecIGAIntegration: "NO"

    # To enable in-memory tracing in Policy Server, set "enabled" to "true".
    # The output file is stored in the location specified for storing core dumps in "corePath".
    # Custom settings can be provided using Config retriever on the path "/opt/CA/siteminder/config/sminmemorytracedefault.txt".
    inMemoryTrace: 
      enabled: false
      size: 100

    secrets:
       # Set this parameter to import data from an existing policy store encrypted with password. The importPassphrase must be the same as the phrase specified during xpsexport."
       importPassphrase: ""
       # If SSL is enabled in ldap policy store, specify the password to encrypt the certificate database key.
       ldapSSLNSSDBPassword: ""

    
  # Path to core dumps.
  corePath: /tmp/corefiles/cores/

  # Config retriever details #
  configuration:
    repository: siteminder.packages.broadcom.com/casso
    image: config-retriever
    tag: 12.8.07.2862

    type: "local"
    aws:
      region: ""
      keyID: ""
      accessKey: ""

    git:
      username: ""
      accessToken: ""

  # Runtime config retriever details #
  runtimeConfiguration:
    repository: siteminder.packages.broadcom.com/casso
    image: runtime-config-retriever
    tag: 12.8.07.2862

    memoryRequest: 50Mi
    cpuRequest: 100m

    intervalSeconds: "300"
    type: "local"

    aws:
      region: ""
      keyID: ""
      accessKey: ""

    git:
      username: ""
      accessToken: ""

  # Logging details #
  logging:
    repository: siteminder.packages.broadcom.com/casso
    image: log-collector
    tag: 12.8.07.2862

  stores:
    keyStore:
      # If "embedded" is set to "NO", specify an external key store. Else, the policy store will be used as key store.
      # Provide IP address/hostname along with port number for key store in the keystorehost:port format. Example: keystorehost.domain.com:389
      # Optional: To enable failover support of odbc key store, enter comma-separated multiple DSNs.
      #           Example: KEYSTORE_DSN1,KEYSTORE_DSN2,KEYSTORE_DSN3, KEYSTORE_DSNn
      # Optional: To enable failover support of ldap key store, enter comma-separated multiple hostnames and port numbers.
      #           Example: host1:port1,host2:port2,host3:port3, hostn:portn
      embedded: "YES"
      service: "KEYSTORE_HOST:PORT"
      userPassword: ""
      type: "odbc"
      odbc: 
        # The supported odbc key store types are "oracle" and "mysql".
        # If odbc type is "mysql", provide valid databasename, DSN, and username.
        # If odbc type is "oracle", provide servicename, DSN, and username.
        type: "mysql"
        databaseName: "KEYSTORE_DATABASE"
        DSN: "KEYSTORE_DSN"
        user: "KEYSTORE_USER"
        oracle:
          databaseServiceName: "KEYSTORE_ORACLE_SERVICE"
        ssl:
          # To enable SSL in odbc key store, set "enabled" to "true".
          enabled: false
          # If SSL is enabled in odbc key store, set "trustStore" and "trustPassword". "hostNameInCertificate" is optional.
          trustStore: ""
          hostNameInCertificate: ""
          trustPassword: ""
      ldap:
        # The ldap type can be "cadir".
        type: "cadir"
        rootDN: "KEYSTORE_ROOTDN"
        userDN: "KEYSTORE_USERDN"
        ssl:
          # To enable SSL in ldap key store, set "enabled" to "true".
          enabled: false

    auditStore:
        # Set "enabled" to enable audit store. The supported audit store types are "odbc" and "text".
      enabled: false
      type: "text"
      odbc:
        # The supported odbc audit store types are "oracle" and "mysql".
        # Provide IP address/hostname along with port number for audit store in the auditstorehost:port format. Example: auditstorehost.domain.com:389
        # Optional: To enable failover support of ODBC audit store, enter comma-separated multiple DSNs.
        #           Example: AUDITSTORE_DSN1,AUDITSTORE _DSN2,AUDITSTORE _DSN3,AUDITSTORE _DSNn 
        # Optional: To enable failover support of LDAP audit store, enter comma-separated multiple hostnames and port numbers.
        #           Example: host1:port1,host2:port2,host3:port3, hostn:portn
        # If odbc type is "mysql", provide valid databasename, DSN, and username.
        # If odbc type is "oracle", provide servicename, DSN, and username.
        DSN: "AUDITSTORE_DSN"
        user: "AUDITSTORE_USER"
        userPassword: ""
        type: "mysql"
        service: "AUDITSTORE_HOST:PORT"
        databaseName: "AUDITSTORE_DATABASENAME"
        oracle:
          databaseServiceName: "AUDITSTORE_ORACLE_SERVICE"
        ssl:
          # To enable SSL in odbc audit store, set "enabled" to "true".
          enabled: false
          # If SSL is enabled in odbc audit store, set "trustStore" and "trustPassword". "hostNameInCertificate" is optional.
          trustStore: ""
          hostNameInCertificate: ""
          trustPassword: ""

      # By default, the audit store type is 'text'.
      # auditUserActivity audits user activity. Possible options: "YES" or "NO".
      # auditAdminStoreActivity audits administrator activity in policy store. Possible values: "YES" or "NO".
      # adminActivity defines the type of events logged for administrator activity. Possible values: 0 - No Events, 1 - allEvents, 2 - Rejection Only.
      # enableAuthAuditing defines type of authentication activities logged: Possible values:: 0 - No Events, 1 - allEvents, 2 - Rejection Only.
      # enableAzAuditing defines type of authorization activities logged. Possible values: 0 - No Events, 1 - allEvents, 2 - Rejection Only.
      # anonAuthAuditing enables anonymous authentication auditing. Possible values: "YES"or "NO".
      # anonAzAuditing enables anonymous authorization auditing. Possible values: "YES"or "NO".
      # affiliateAuditing enables affiliate auditing. Possible values: 0 - No Events, 1 - allEvents, 2 - Rejection Only.
      auditUserActivity: "YES"
      auditAdminStoreActivity: "NO"
      adminActivity: 1
      enableAuthAuditing: 1
      enableAzAuditing: 1
      anonAuthAuditing: "NO"
      anonAzAuditing: "NO"
      affiliateAuditing: 0

    sessionStore:
      # Set "enabled" to enable session store.
      enabled: false
      # Provide IP address/hostname along with port number for session store in the sessionstorehost:port format. Example: sessionstorehost.domain.com:389
      # Session store type is either "ldap" or "odbc".
      # Optional: To enable failover support of odbc session store, enter comma-separated multiple DSNs.
      #           Example: SESSIONSTORE_DSN1, SESSIONSTORE_DSN2, SESSIONSTORE_DSN3, SESSIONSTORE_DSNn
      # Optional: To enable failover support of ldap session store, enter comma-separated multiple hostnames and port numbers.
      #           Example: host1:port1,host2:port2,host3:port3, hostn:portn
      service: "SESSIONSTORE_HOST:PORT"
      userPassword: ""
      type: "odbc"
      odbc:
        # The supported odbc session store types are "oracle" and "mysql".
        # If odbc type is "mysql", provide valid databasename, DSN, and username.
        # If odbc type is "oracle", provide servicename, DSN, and username.
        DSN: "SESSIONSTORE_DSN"
        type: "mysql"
        databaseName: "SESSIONSTORE_DATABASE"
        user: "SESSIONSTORE_USER"
        oracle:
          databaseServiceName: "SESSIONSTORE_ORACLE_SERVICE"
        ssl:
          # To enable SSL in odbc session store, set "enabled" to "true".
          enabled: false
          # If SSL is enable in odbc session store, set "trustStore" and "trustPassword". "hostNameInCertificate" is optional.
          trustStore: ""
          hostNameInCertificate: ""
          trustPassword: ""

      ldap:
        # The ldap type can be "cadir".
        rootDN: "SESSIONSTORE_ROOTDN"
        userDN: "SESSIONSTORE_USERDN"
        # To enable SSL in ldap session store, set "enabled" to "true".
        ssl:
          enabled: false

policyServer:
  # Set this parameter to "true" to deploy Policy Server.
  enabled: false

  replicas: 1
  
  # Host entries that should be added in the etc/hosts file. Add any host that is not DNS resolvable with its name.
  hostAliases:
  - ip: "192.168.1.10"
    hostnames:
    - "example.com"
    - "www.example.com"

  # Policy Server image repository details.
  repository: siteminder.packages.broadcom.com/casso
  image: policy-server
  tag: 12.8.07.2862

  memoryRequest: 200Mi
  cpuRequest: 1000m

  initializationTimeout: 120

  podTerminateGracePeriod: 60

  # To work with SecurID authentication schemes in policy server, set "enabled" to true.
  # If you set to "YES", generate the ACE configuration information file (sdconf.rec, failover.dat)
  # on RSA Authentication Manager by an RSA Administrator and then place it in the
  # overlay/lib directory of config-retriever path to copy to the <policy_server_installation_path>/lib directory of the Policy Server container.
  rsaSecureId:
    enabled: false
    nodeSecretEncryptionPassword: ""

  # This section is to provide service details for Policy Server.
  serviceNodePort:
    accnt: 31341
    authn: 31342
    az: 31343
    radiusAuthPort: 32344
    radiusAcctPort: 32345
    psHealthProbe: 31333

  # Set to "YES" to enable Advanced Password Services in Policy Server.
  aps: "NO"

  # Set to "YES" to enable integration with Symantec Advanced Authentication.
  enableSymantecAdvancedAuthenticationIntegration: "NO"

  # Set to "YES" to enable Policy Server as Radius Server.
  enableRadiusServer: "NO"  

  # Config retriever details for Policy Server#
  configuration:
    source: "/tmp/democonfiguration/policyserver"
    gitFolderPath: "/policyserver"
  runtimeConfiguration:
    enabled: false 
    source: ""
    runtimeGitFolderPath: "/policyserver"

  # Autoscaling details of Policy Server.
  autoscaling:
    enabled: false
    replicasMin: 1
    replicasMax: 10
    cpuUtilization: 70
    averageRequestQueueInUse: 15

  # Logging details of Policy Server.
  logCollector:
    memoryRequest: 100Mi
    cpuRequest: 200m

  metricsExporter:
    enabled: false
    memoryRequest: 100Mi
    cpuRequest: 200m
    
    repository: siteminder.packages.broadcom.com/casso
    image: metricsexporter
    tag: 12.8.07.2862

    livenessProbe:
      initialDelaySeconds: 180
      timeoutSeconds: 5
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 5

admin:

  # Set true to deploy Administrative Policy Server.
  enabled: false

  replicas: 1

  # Host entries that should be added in the etc/hosts file. Add any host that is not DNS resolvable with its name.
  hostAliases:
  - ip: "192.168.1.10"
    hostnames:
    - "example.com"
    - "www.example.com"

  policyServer:

    repository: siteminder.packages.broadcom.com/casso
    image: policy-server
    tag: 12.8.07.2862

    # Set to "YES" to upgrade XPS Schema in policy store with latest version.
    xpsSchemaUpgrade: "YES"
    # service ports
    serviceNodePort:
      accnt: 31441
      authn: 31442
      az: 31443

    # Set "YES" to import default CA certificates.
    importDefaultCACertificates: "NO"

  adminUI:

    # Administrative UI docker image repository details.
    repository: siteminder.packages.broadcom.com/casso
    image: admin-ui
    tag: 12.8.07.2862

    # Define max time allowed for Administration UI registration with Policy Server.
    regMaxTimeoutSeconds: 300

    # To check for Liveness and Readiness of Administrative UI.
    livenessProbe:
      initialDelaySeconds: 180
      timeoutSeconds: 5
      periodSeconds: 5
      failureThreshold: 500
    readinessProbe:
      initialDelaySeconds: 40
      timeoutSeconds: 3
      periodSeconds: 5
      failureThreshold: 500

    # By default, connection is over SSL as per selection of Ingress or NodePort.
    serviceChoice: ingress
    serviceNodePort:
      http: 30002
      https: 30003

    # Custom header name that contains clientIP
    customClientIPHeader: "x-forwarded-for"

    # Configure external authentication for Administrative UI. Enable the feature only once SiteMinder administrator user is created from Administrative UI after connecting to external user directory.
    # See product documentation for details.
    externalAuth:
      enabled: false
      importFile: ""
      type: "odbc"
      odbc:
        dataSourceName: "smadministrators"
        odbcType: ""
        serverName: ""
        serverPort: ""
        databaseName: ""
        username: ""
        userPassword: ""
      ldap:
          userPassword: ""
   
    # To use custom provided key store to enable HTTPS for Administration UI, set "enabled" to true.
    # Alias name must be same as the value used in key store (JKS) file.
    # This key is to provide password for Administrative UI key store (custom certificates), used for HTTPS. Default value is tomcat.
    customKeyStore:
      enabled: false
      password: "" 
      aliasKey: "tomcat"  

  # className is based on the Ingress class that is being deployed. Default value is nginx.
  ingress:
    className: "nginx"
    hostName: casso.ca.local
    servicePort: 8443
    tlsSecret: casso.ca.local-tls
    tlsCrt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lKQUpiYi9TLyt1UmcyTUEwR0NTcUdTSWIzRFFFQkN3VUFNQmt4RnpBVkJnTlYKQkFNTURtTmhjM052TG1OaExteHZZMkZzTUI0WERURTVNVEF3TXpFek16Y3pNVm9YRFRJNU1Ea3pNREV6TXpjegpNVm93R1RFWE1CVUdBMVVFQXd3T1kyRnpjMjh1WTJFdWJHOWpZV3d3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBCkE0SUJEd0F3Z2dFS0FvSUJBUUM4SzJYT0VkeHdKbklCOEJFSnBRNmZ2YnhlN01PZ1FJNkJLT09HdzFvdlB1N1AKTWJNdEhSaVIybXJocFIvRHFHekVNMDgrSnZnNmRtWCsxRktlV200UzhUZ0dTekVmRjg5Z21LaFRTdXFGK0lvawp3YzA3YnYwNUJQclAyTE9FTlJZUFdhTlh0dldLQWgwSGtNQnh4ck1qZnNCVExlckhCcnVMRDRneTd2VFk4NW9CClNZWVY5YnB1c2hFbmhCdVQwdUFLVXpDNW1NdTBibnkyZmZQdHdCR2ZlNTg0NHFNMXBaSnUzN0NhaUdDbzV0RFUKU1EzTGxSWG9DN0NEbEZtb3JFRC9Zd0V0VndjRFp4S3YzdkJUa0MzeXlhK1EzNi9oaE9uYzM0cmFCd0RIQjdmeApSaHAzbTJqd1gvZGJwSE1aR1AyL09rb3JGVzJBN1NLbHhBSHh6OEJqQWdNQkFBR2pVREJPTUIwR0ExVWREZ1FXCkJCUmFnS1Y0UU9WNHliamR6b0tkTjRJS0JtNmZmVEFmQmdOVkhTTUVHREFXZ0JSYWdLVjRRT1Y0eWJqZHpvS2QKTjRJS0JtNmZmVEFNQmdOVkhSTUVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVZGMzVOMk8vKwpVS0ZBU3VEUEpiS01PZlo3eFhWTzZnQW1kSVA1dzdDOHJZYU1Ha1FZVEhGa011YjdEKzZCOGJuWWVuSkNSWXZMCklUQ2sxTlEwYzFScVA1blJwWFlrOGt5RUpxOVZJb25wb0VtWEZ1a050TFVTbEhqcFlaVlNzZTVIRDFmMnJDUUEKTWZwSzhsTTJ2NS9RMVVkclYrcFkzaDZNaC8zUWRQcTYxbGdBMFZiY0drR09iRWxEK05JRkxZbzJ3elQ2S2JzUAprS2pmTm1oY2d1ZFVqWVZobU44TnQ0NmRXWTlNWjhqUTBuWVRnSkh6OG5TOUpKT2E3K1pZUWgxMisvanJzNDVhCkpxdE9mUzFLU2ZzdldYOGZXYzNTcmw4bXozc2NabXF2amZ3eE56YTBxc0YrTjB2dDZmRlljczl4U3JIYnVvWjIKWVBsQlo0UGNSTVpSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0="
    tlsKey: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQzhLMlhPRWR4d0puSUIKOEJFSnBRNmZ2YnhlN01PZ1FJNkJLT09HdzFvdlB1N1BNYk10SFJpUjJtcmhwUi9EcUd6RU0wOCtKdmc2ZG1YKwoxRktlV200UzhUZ0dTekVmRjg5Z21LaFRTdXFGK0lva3djMDdidjA1QlByUDJMT0VOUllQV2FOWHR2V0tBaDBICmtNQnh4ck1qZnNCVExlckhCcnVMRDRneTd2VFk4NW9CU1lZVjlicHVzaEVuaEJ1VDB1QUtVekM1bU11MGJueTIKZmZQdHdCR2ZlNTg0NHFNMXBaSnUzN0NhaUdDbzV0RFVTUTNMbFJYb0M3Q0RsRm1vckVEL1l3RXRWd2NEWnhLdgozdkJUa0MzeXlhK1EzNi9oaE9uYzM0cmFCd0RIQjdmeFJocDNtMmp3WC9kYnBITVpHUDIvT2tvckZXMkE3U0tsCnhBSHh6OEJqQWdNQkFBRUNnZ0VBYVVjeWwxL2c0Skp4K09tUzdyMTllQnhVMXh0S3ZFOUNLN3R2eVVkbEhzZnMKSHRwa3NCbjJWQ3hLM21KZmFqM0NWT2VNTDI3b05QVm5UWE1Ib25kZjNKTS9VQzRqbG96Z3h0L0NWWSsxdFMwQQpSVjUwOEFyQi9IUHZ5L2duUUJIZmZNa2ZIWVZNeldFdlVydEhJS0VXT3diQW5na3pzUlR3T3ZaK3NsaUZmeGVlCkEyOWs4MlFGU1FodXNBbmJKZklnUjBrRTdIcXJDbWk1WCs1dEtTVTlrSWdpQlUzMG16U1poL2lHYjhyS3RSeTAKdFgxQytlaTlBSDNsb0Vmc2VmOWhWWkpzKzV2UTdYS3h2eU4wTXdtYlVDZVZXdFp5NWJGS2VXenBpNnhkRUk2WQpvT3BqK2VadllWQU1WVWFocGZJSnhCd2UzYlBtY09VQVdoSkJ2ZkdQdVFLQmdRRHBjMytycUJCVnFGYlR0QStCCjVyRXcwelNyQTBpaFpTUGxCOWRzUHQ4cHhCV2F1dHVTSVN5dG9sT1YrRGRUSUNnY1hmbkRaTVQxcmNrc0pOQnEKUmROQkhQM3k2RjE2SS9XZTY0Zk8zNUdJL1VabU14RlZIN1laRmZVSmxXSDhSVjgzbWppTlJ4OHVJc1VyWXdCZgo1dXRibEFLZFkvSVVuUjc0RzZvd1lCY2h6UUtCZ1FET1dEcUZxSWR2ZWp4K2pYVnVDT1FQMk02L1VLejB4ZW04CmMxZUdHZXVGSFp2TkZzbmZUSWI5NHpCUDQzOG1ZRHZoenFuK2pQYWFXNWt4MmdEak5CbE1sOTIrMW5nUUcyWHMKaWR3YVVrRFVOcFZoTnBIcVVtZmF2Q2VLSnQ0NGtDQjBISVpXTFpsVDQrM28rS0NRVGhZbUcrWjZMcTNiZFFRSgpJWm5HU1FuNjd3S0JnUURqbS9tWlNuWUtuZU54NnpmSFpqM1NKY3BQQmhlVlRFQVArSEkvbHBrTVpxTE54bXQzCjhTSlhkRkhjZ1RLbnVFMkRRdGpXZWZSU3VJclFvR0FYalZhb1FIVVVsUnMyajhMVm5EeEFKZGdHWVRKM1NFa1kKM3A4em5DWFpueXoyd2toUXRPdDRTeVNLWGRveE1BaFllSk4yS1R2WGFtL0hTMTI3ZDNXYVRzV2U3UUtCZ1FDdQoxWkRZZVFBd1UyajRiWkZuSno5ZHNmMFRteDdBMHdTRnVWRWFmZEhSMjFHTWgxZUt6VU8vMFFTNVcrLzdLeVR4CjRmS2xqUGpSdHZUcGlXYWhIQjZuaURISnBkemJBT3Z1Ykt6QzNKaXpkb0JCZTBSTlAzOWhsWFVIR0lISGVVOFcKTXFrY1VjeU5pUjJtL1NyR3VuTUgzVEgrcXBpQ3p2WVphby9wc3k4eW53S0JnSHNGY1UzKzVMZHRFV040c2lhNwoyazFLQkV4YnhrSTFiK1ZYUjcrZ2lBcTBOaFJqYWRLM29TYnQ3OEN3bnh3ZnBIU2VOVjY2VTl4NG9hTVQvcnIrCkJRUHBNeGMrY2JaeUNHbzZZYXNTWFZWdVVHazdHTDgra1k0ai95bzhBMC9yc0ZKaDd0U0dzNFh0L1IzelUzekIKK1B5WDhPR0gxMnZYZlFaKzFKblN0RDhoCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"

  # Config retriever details for Administrative Server #
  configuration:
    source: "/tmp/democonfiguration/admin"
    gitFolderPath: "/admin"
  runtimeConfiguration:
    source: ""
    enabled: false
    runtimeGitFolderPath: "/admin"

