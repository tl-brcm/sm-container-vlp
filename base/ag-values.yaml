# acceptLicenseAgreement must be "YES" to proceed with Access Gateway container deployment. #
acceptLicenseAgreement: "YES"

# The masterKeySeed value is used for encrypting all the secrets. Enter a value in the Base64 encoded format. #
masterkey:
   creds: "masterkeycreds"
   masterKeySeed: "ZmlyZXdhbGw="

fullnameOverride: "casso"

restartPolicy: Always

podTerminateGracePeriod: 60

dnsPolicy: ClusterFirst

images:

  imagePullPolicy: Always

  # Docker image repository details #
  sso:
    registry:
      url: "https://siteminder.packages.broadcom.com/"
      existingSecrets: []
      credentials:
        username:
        password:

    configuration:
      repository: "siteminder.packages.broadcom.com/casso"
      image: "config-retriever"
      tag: 12.8.07.2862
    
    runtime:
      configuration:
        repository: "siteminder.packages.broadcom.com/casso"
        image: "runtime-config-retriever"
        tag: 12.8.07.2862
      
    logging:
      repository: "siteminder.packages.broadcom.com/casso"
      image: "log-collector"
      tag: 12.8.07.2862
      
    metricsExporter:
      repository: "siteminder.packages.broadcom.com/casso"
      image: "agmetricsexporter"
      tag: 12.8.07.2862

    accessGateway:
      repository: "siteminder.packages.broadcom.com/casso"
      image: "access-gateway"
      tag: 12.8.07.2862

sso:

# This section contains information required for Access Gateway to register with Policy Server.
# If Policy Server is within the cluster, service field should be "<policy-server-service-name>.<policy-server-namespace>.svc.cluster.local".
# If Policy Server is in a different cluster exposed using a NodePort, service field should be "<hostname-of- master-node-of-policy-server-cluster>:<NodePort-mapped-to-policy-server-service-account-port>".
# If Policy Server is in a different cluster behind a load balancer, service field should be "<hostname-of- master-node-of-policy-server-cluster>:<load-balancer-port-mapped-to-policy-server-service-account-port>".
# In EKS/AKS, service field should be "<exposed-IP-of-load-balancer-in-front-of-policy-server>:<exposed-load-balancer-port>".
# policyServer.fipsMode specifies the FIPS mode of Policy Server.
  policyServer:
    service: ""
    fipsMode: "COMPAT"

# Config retriever's source configuration #
  configuration:
    type: "local"
    source: "/tmp/democonfiguration/accessgateway"
    aws:
      creds: "awscreds"
      keyID: ""
      accessKey: ""
      region: ""
    git:
      creds: "gitcreds"
      username: ""
      accessToken: ""
      folderPath: ""

# Runtime config retriever's source configuration #
  runtime:
    configuration:
      enabled: false
      interval: 600
      type: "git"
      source: ""
      aws:
        creds: "runtimeawscreds"
        keyID: ""
        accessKey: ""
        region: ""
      git:
        creds: "runtimegitcreds"
        username: ""
        accessToken: ""
        folderPath: ""

      resource:
        memoryRequest: 100Mi
        cpuRequest: 100m

# Metrics exporter configuration #
  metricsExporter:
    livenessProbe:
      initialDelaySeconds: 40
      timeoutSeconds: 10
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 10
    resource:
      memoryRequest: 60Mi
      cpuRequest: 100m

# Host entries that should be added in the etc/hosts file. Add any host that is not DNS resolvable with its name.
  accessGateway:
    hostAliases:
    - ip: "192.168.1.10"
      hostnames:
      - "example.com"
      - "www.example.com"

# Access Gateway liveness/readiness probe details #
    livenessProbe:
      initialDelaySeconds: 40
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 5
    readinessProbe:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 5

# Server name entry in the httpd.conf file and httpd-ssl.conf file.
    publicHostname: ""

# Access Gateway Registration with Policy Server #
    trustedHost: ""
    enableSharedRollover: false
    aco: ""
    hco: ""

# Path to core dumps.
    corePath: /tmp/corefiles/cores/
# List of virtual hostnames that can be used to access Access Gateway.
    virtualHostnames: "sps.ca.com"

# Set enableAgent to true for Agent functionality.
    enableAgent : true

# Apache configuration #
    apache:
      adminEmail: ""
      trace: "YES"
      
# Access Gateway SSL Configuration #
# apache.ssl.enabled is to either enable or disable SSL communication to Access Gateway.
# apache.ssl.certFile specifies the Apache public certificate, placed in <config-retriever-root-folder>/accessgateway/access-gateway/overlay/SSL/certs/.
# apache.ssl.keyFile specifies the Apache private key, placed in <config-retriever-root-folder>/accessgateway/access-gateway/overlay/SSL/keys/.
# apache.ssl.caFile contains the name of CA certs bundle, placed in <config-retriever-root-folder>/accessgateway/access-gateway/overlay/SSL/certs/.
# apache.ssl.verifyType specifies the Client authentication type.
# apache.ssl.verifyDepth specifies the depth to verify the certificate issuer chain before deciding that a certificate is invalid.
# apache.ssl.keyPwd specifies password of Apache certificate key file.
      ssl:
        enabled: false
        certFile: ""
        keyFile: ""
        caFile: ""
        verifyType: ""
        verifyDepth:
        creds: "apachesslcreds"
        keyPwd: ""
# noodle.ssl.enabled is to enable HTTPS communication with backend servers.
# noodle.ssl.clientKey specifies the private key filename of the noodle client certificate, placed in <config-retriever-root-folder>/accessgateway/access-gateway/overlay/SSL/clientcert/key/.
# The corresponding client certificate has to be placed in <config-retriever-root-folder>/accessgateway/access-gateway/overlay/SSL/clientcert/certs/.
# noodle.ssl.clientPassphrase specifies the passphrase for client certificate.
    noodle:
      ssl:
        enabled: false
        clientKey: ""
        creds: "noodlesslcreds"
        clientPassphrase: ""

    service:
      type: "NodePort"
      port:
        http: 31090
        https: 31353
      

# Ingress configuration #
    ingress:
      className: "nginx"
      enableSSLPassThrough: "NO"
      virtualHostname: "sps.ca.com"
      tlsSecret: acccess-gateway-vhostname-tls
      tlsCrt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlIUlRDQ0JTMmdBd0lCQWdJVExBQUFBdmNoZEZUU2RHWUJPQUFBQUFBQzl6QU5CZ2txaGtpRzl3MEJBUXNGDQpBREIvTVFzd0NRWURWUVFHRXdKSlRqRVNNQkFHQTFVRUNCTUpWR1ZzWVc1bllXNWhNUkl3RUFZRFZRUUhFd2xJDQplV1JsY21GaVlXUXhEREFLQmdOVkJBc1RBMU5DVlRFTU1Bb0dBMVVFQ3hNRFJWTkVNUll3RkFZRFZRUUtFdzFDDQpjbTloWkdOdmJTQkpibU11TVJRd0VnWURWUVFERXd0Q2NHTlFjbUZ0YjJSRFFUQWVGdzB5TWpBeE1EY3dOVFF3DQpNVEJhRncweU16QXhNRGN3TlRVd01UQmFNR1V4Q3pBSkJnTlZCQVlUQWtsT01Rc3dDUVlEVlFRSUV3SlVVekVTDQpNQkFHQTFVRUJ4TUpTSGxrWlhKaFltRmtNUkV3RHdZRFZRUUtFd2hDY205aFpHTnZiVEVOTUFzR0ExVUVDeE1FDQpRMU5DVlRFVE1CRUdBMVVFQXhNS2MzQnpMbU5oTG1OdmJUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQDQpBRENDQVFvQ2dnRUJBTzN2U3VSWWpOZWZGMjhwYUFBcVNpTmRSMGx6ZkV3T2VhbnFBR2lGbFdaMUdqOGg5N1VaDQo3V05DOEMxVEUzbmIvTS9MbjhsK3owQ1JEa2lGdVRCaUxrMGJGOEZRMzF5by9tRkdIejJhSHNwb1hncDZKWm01DQpTcU9rSmt0NmlDcEE0RlhrNFZpa3JsclBVL1k4Q0JMdlVrdzZmcCtZVzV6dFpWUkw0UjBzUXkrRWhGbjYzRGJLDQpkYlRzMHFCZ01waU0vcFBEd1BPYnRtNytGdGh2Sjg3RThUK2gyalJncERocExoajl5WVBBQkt1Q0FqSmN6di9PDQpraGNVbjhoK2srU3NIdnlrK1FiNkMwR1FtRjBUQzA3U25YQThWREtrSGRTRnNMVUxRS01BeFM0RS9NUDJWNHF5DQpTeFNXSGd2Y2Z3RDl6M2NBM2RuT3hlVTNISWovc2RCODJSc0NBd0VBQWFPQ0F0SXdnZ0xPTUIwR0ExVWREZ1FXDQpCQlRmNXVCaEdwL3ptTzNmQ3kwQ0lXaHgva1JlNFRBZkJnTlZIU01FR0RBV2dCVHlLc0M5TmswMU8vR2dQVm1QDQo3L2RGOFBXTk1qQ0NBaU1HQTFVZEh3U0NBaG93Z2dJV01JSUNFcUNDQWc2Z2dnSUtob0htYkdSaGNEb3ZMMnh2DQpaR2xpYkRJd09XSjJiVEF6Tnk1dGMyRmtabk11WTI5dE9qTTRPUzlEVGoxc2IyUnBZbXd5TURsaWRtMHdNemN1DQpiWE5oWkdaekxtTnZiU3hEVGoxc2IyUnBZbXd5TURsaWRtMHdNemNzUTA0OVEwUlFMRU5PUFZCMVlteHBZeVV5DQpNRXRsZVNVeU1GTmxjblpwWTJWekxFTk9QVk5sY25acFkyVnpMRU5PUFVOdmJtWnBaM1Z5WVhScGIyNHNSRU05DQpiWE5oWkdaekxFUkRQV052YlQ5alpYSjBhV1pwWTJGMFpWSmxkbTlqWVhScGIyNU1hWE4wUDJKaGMyVS9iMkpxDQpaV04wUTJ4aGMzTTlZMUpNUkdsemRISnBZblYwYVc5dVVHOXBiblNHZ2VKc1pHRndPaTh2Ykc5a2FXSnNNakE1DQpZblp0TURNM0xtMXpZV1JtY3k1amIyMHZRMDQ5Ykc5a2FXSnNNakE1WW5adE1ETTNMbTF6WVdSbWN5NWpiMjBzDQpRMDQ5Ykc5a2FXSnNNakE1WW5adE1ETTNMRU5PUFVORVVDeERUajFRZFdKc2FXTWxNakJMWlhrbE1qQlRaWEoyDQphV05sY3l4RFRqMVRaWEoyYVdObGN5eERUajFEYjI1bWFXZDFjbUYwYVc5dUxFUkRQVzF6WVdSbWN5eEVRejFqDQpiMjAvWTJWeWRHbG1hV05oZEdWU1pYWnZZMkYwYVc5dVRHbHpkRDlpWVhObFAyOWlhbVZqZEVOc1lYTnpQV05TDQpURVJwYzNSeWFXSjFkR2x2YmxCdmFXNTBoanBvZEhSd09pOHZiRzlrYVdKc01qQTVZblp0TURFNUxtbG9lUzVpDQpjbTloWkdOdmJTNXVaWFF2ZEdWemRHbHVaME5TVEM5amNtd3VZM0pzTUZjR0NDc0dBUVVGQndFQkJFc3dTVEJIDQpCZ2dyQmdFRkJRY3dBb1k3Wm1sc1pUb3ZMeTh2YVdKdWNXRXdNREV4TmpndlEyVnlkRVZ1Y205c2JDOXBZbTV4DQpZVEF3TVRFMk9GOUNjR05RY21GdGIyUkRRUzVqY25Rd0RBWURWUjBUQVFIL0JBSXdBREFOQmdrcWhraUc5dzBCDQpBUXNGQUFPQ0FnRUFYYXowZVY3SDVpdFdyb09WRU1jdFpQSXA4b244TG1jUGlGb0NxMHRkVlhSdWQzVlhNelBEDQpKQ1FwcGxOTlJjYlB1Z2tTV29EMzFmc01iSHRvV1U1OExFQzdiR3ZoV2ZQUEJKM2J5ZFhnVUtoN1dXclFpaUVrDQpmK2Rmdmp3THRvS0h3OS9MRnRpR0lML0x5dmxodmV1OVpud1FHVm15eE1TZlljN1ZFUXA1TGZhRnZ6ZlEwZ0J6DQpZWUZxcEV3VTYra3lFcGhiZStFOUVKSnNLRFZ2ZEpFbmJWOGFWUmhVUDNnVU1XN2xIOHhlUkRLcFZzNVlsQWwvDQpLS1E5b1pPNGJKQ2NZQ2N5cHlTa0VNZm00RTlPSitGM1FoZ2lLSTlkUnZwK0h2UFcvelI4ODhtemE5NTNUSkRjDQo2cGhKMnY5VXIvSFRaUFk1OVhFZ2pRTk9WR1NSendvRFJzbTdHNTdZSEtUZ3hEY0gzTXhCdGxXMEFlRUR0dWlJDQo3SGpDZlhudEhRNWxXREI5NmJwOFRjTlFWeFo1Wnh2R0NQTjJuUFozR1RHWGlCWUFheUR3TEU3clV3aUExdXUwDQpXb25lcGxLc1FnaUFSQTUzT2YrL3R5TklNb2VWcDJQU2JnNmxlcUtmM1ZTZ3JhbkJ1c1VaV3NpU29XNUh1eFFiDQpqTFlTWUV0SzcyMHFsQ3ZTaC9kVzhsTEpjLzdoZUliY0tVZGxRaXhQZ0x2amtsTjlMWFpGQVJEa3NSSW93VVFRDQp6MFpBU3ZCcXdRRTZ6MnhiMGxXOTdRcUlwQTlpU2tITkRlRWVhVW9lM2sxNXdDaDNNOVJGR2l0QWt0WnhjV25FDQpabEZUeDRhRmxpQUIxNUFBeHZLbWErb0lLWkI5eTJzVVFFK091a1d1VVp4V3I5YmRLdHV0RDhRPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K"
      tlsKey: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tDQpNSUlFdmdJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLZ3dnZ1NrQWdFQUFvSUJBUUR0NzBya1dJelhueGR2DQpLV2dBS2tvalhVZEpjM3hNRG5tcDZnQm9oWlZtZFJvL0lmZTFHZTFqUXZBdFV4TjUyL3pQeTUvSmZzOUFrUTVJDQpoYmt3WWk1Tkd4ZkJVTjljcVA1aFJoODltaDdLYUY0S2VpV1p1VXFqcENaTGVvZ3FRT0JWNU9GWXBLNWF6MVAyDQpQQWdTNzFKTU9uNmZtRnVjN1dWVVMrRWRMRU12aElSWit0dzJ5blcwN05LZ1lES1lqUDZUdzhEem03WnUvaGJZDQpieWZPeFBFL29kbzBZS1E0YVM0WS9jbUR3QVNyZ2dJeVhNNy96cElYRkovSWZwUGtyQjc4cFBrRytndEJrSmhkDQpFd3RPMHAxd1BGUXlwQjNVaGJDMUMwQ2pBTVV1QlB6RDlsZUtza3NVbGg0TDNIOEEvYzkzQU4zWnpzWGxOeHlJDQovN0hRZk5rYkFnTUJBQUVDZ2dFQkFPaG55ZEZOSlJVZ0VuWEVEZy9MUHV0WUcxK0ZiQzJtSGZSMzJybzljUGJJDQovMEFYWDZzSGpqWmNsZGpQd3NCT3Zwd0JteXZucjJ5end5M1hZRklBTkpXZ0Z3MytmbzQxaTNOY1dQdUU1UHAwDQpBeGRjeEFscFVaeVJvODRwKzRLNkorWCtVSmFURkxNaXZESlI1TmtKNW1zSzM4L25zK1NPaFdGWFZLVjRMSS9sDQprRjhBUW5VdERnb3FxYjVPQUtGSHk0dm9uMi9SemNSZ1hscEFVVlBFeUMwazJRNUVyQjBOcnhtL2orMTlVZDIzDQpzdjlCbENLWUhDbnRkUThEU3ozUXBiU2F1THdRMTVLU0JPZVhYSEprMUFnTXRRRFk1MTRkZ1Q1V1BRWTRGOCtiDQpVWmlvTE00Kzc1VDhOT3ZLbllySWJJNzNNRUdaKy9XdUY5NTd4eTNyRDdFQ2dZRUErNDdlU3d3SkN5NEIwYmh2DQp2bWkzaGtlbEtodEJxaEI4VmVyZkpWZkdPcDlrVGpRaFM1SUdrR0gzVERmSlNJN0FpUlZIVW9ZbTFSTVQ2R3BTDQpIOVkvNHVEQW9lOTBSWmM0OHo3dnJRL2VVd1lOUnNOclJXakV2TS9Cb0RKbE8xOE4zcFZCNm1PUDhUcW5ZWGtEDQpMc2RFUTVPeW1iWFN5aG5hWTY0ZjZBSWpCWjBDZ1lFQThpTFhoVFF5QnREaUM3MWhzSGozMmVDTzcyNlYveklCDQpDT3o5OG4vK0dRVk5YZHJHMTliVzVONmhTZk9tYjFsV0UrWmhzQ0NSMmlNWi9KOXlLa0tTWTJ4Z2EzRzhpNndrDQp3eUR6MVpyVE4xbjM2SWhGMzZuSzY4MVRzT29ZdGZmT3oxWDJDOUlLdFhhczFOY2ZzVkdUWWFUQ3F2YUJXeXpEDQp3ZUg0VkFxQk9CY0NnWUJjY3J2bERxNUFLbzlHbUthUWJvR0wyc2FyTzhzZENlUDMyMUpZc2ZKSzF3c1E1bjJaDQovVGRtVm1xQTJ6dWc2NzE4WTVLTGxIdXU4TXp2TEN1MFFaUEcrRnd5NXdKdkZNMDhMOVA3WVFxT3JubXdtTjdTDQphbGRySUZzRFdhSDBlTkZyREtWbDAyTXgveUZHWkNlMFNFMGhIS1dWY2NuZXRqT1pVSU92U3lHOXpRS0JnQkVODQpBUTVCUWJDWEx3UFNuemwxRzBiOWVETkdIMHZzTW9SMVkrQ2F3TUwwUzZGclVZdExkckNCT094ak92b21XVmhuDQpaY09vVjN6NzhjMkhVTnZHK2xZRUFMb3dOUzNFdm9YN0lSQ09xWWNCVCtMUkRkS1ZPMVBsanBvcnNmZkdib3JODQpLOWxqUGh2UE1wWitXNTM1OTUzdG8wTzB2aUUwZ3NoNWFDcEszeFNiQW9HQkFLd25wdmY3dUU3UEQyaUFaK3V6DQphZjVWaFB3ajFRS3FWQkJGU3p6Um1zT2ZUQWdKamFiYVlocVZ0MW1aT0NUQUR4SmE0cm5yMktkNDZreFR6THg5DQpUbEtGTnY5VTYxTVZHWmU2TW9YM1lDT2d1Q2ZBcDVIN2N2Z1FmbFVPejBmZHozMkViVFVlVVdJQXRJb1B6a2JoDQpZY3FmL3VOLzNxNThHMGMzT1pJT1hrZVQNCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0="

# Custom metrics configuration #
    ag:
      metricsExporter:
        enabled: false

# Resource configuration #
      resource:
        memoryRequest: 200Mi
        cpuRequest: 500m

# Autoscaling configuration #
    pod:
      autoscaling:
        enabled: false
        replicasMin: 1
        replicasMax: 4
        cpuUtilization: 80
        customMetrics:
          metricName: "apache_request_rate"
          targetAverageValue: 20
          
# Log collector configuration #
    log:
      resource:
        memoryRequest: 100Mi
        cpuRequest: 100m

# Authentication authorization web services configuration #
    authaz:
      enabled: false
      acoName: ""
      hostName: ""

# Federation gateway configuration #
    federationGateway:
      enabled: true
      trace: 
        enabled: false

# SiteMinder admin credentials #
    regSecret:
      name: "regadmincreds"
  adminUsername: "TzB6UGdqdDZDaERXZnFXT3IwN1E5MTVoVWxZTmlqQ1owZ295Zk5Dc2dtMzFpQjNIK2E5OWRjSTV3NU8yUjNKdQ=="
  adminPassword: "SUZoZEMxbXdpYnhKS0xPRDdZem1FUnNmN3huUGtmUGZtOGJ5RmJnMmIrOEpDSmFENmQyUS9GdUg4SDcxZ2Q1eg=="

